procedure sortPareImpare(v[],n)
 BEGIN
 ok<-1
 while    ok = 1     do
  ok<-0
  for i=0 to n-2 do
   if v[i]%2=1 && v[i+1]%2=0 then      
    aux<-v[i]
    v[i]<-v[i+1]
    v[i+1]<-aux
    ok<-1
   else
    v[i]<-q+1
    break
  repeat
   a<-b
   b<-c
  until b-c>a;
 END
function sumCif(n)
 BEGIN
 sum<-0
 while n>0 do
  sum<-sum+n%10
  n<-n/10
 return sum
 END
function cmmdc(a,b)
 BEGIN
 while b!=0 do
  rest<-a%b
  a<-b
  b<-rest
 return a
 END
procedure sortPareImpare(v[],n)
 BEGIN
 ok<-1
 while ok=1 do
  ok<-0
  for i=0 to n-2 do
   if v[i]%2=1 && v[i+1]%2=0 then      
    aux<-v[i]
    v[i]<-v[i+1]
    v[i+1]<-aux
    ok<-1
   else
    v[i]<-q+1
    break
  repeat
   a<-b
   b<-c
  until b-c>a;
 END
function sumCif(n)
 BEGIN
 sum<-0
 while n>0 do
  sum<-sum+n%10
  n<-n/10
 return sum
 END
function cmmdc(a,b)
 BEGIN
 while b!=0 do
  rest<-a%b
  a<-b
  b<-rest
 return a
 END
procedure sortPareImpare(v[],n)
 BEGIN
 ok<-1
 while ok=1 do
  ok<-0
  for i=0 to n-2 do
   if v[i]%2=1 && v[i+1]%2=0 then      
    aux<-v[i]
    v[i]<-v[i+1]
    v[i+1]<-aux
    ok<-1
   else
    v[i]<-q+1
    break
  repeat
   a<-b
   b<-c
  until b-c>a;
 END
function sumCif(n)
 BEGIN
 sum<-0
 while n>0 do
  sum<-sum+n%10
  n<-n/10
 return sum
 END
function cmmdc(a,b)
 BEGIN
 while b!=0 do
  rest<-a%b
  a<-b
  b<-rest
 return a
 END
procedure sortPareImpare(v[],n)
 BEGIN
 ok<-1
 while ok=1 do
  ok<-0
  for i=0 to n-2 do
   if v[i]%2=1 && v[i+1]%2=0 then      
    aux<-v[i]
    v[i]<-v[i+1]
    v[i+1]<-aux
    ok<-1
   else
    v[i]<-q+1
    break
  repeat
   a<-b
   b<-c
  until b-c>a;
 END
function sumCif(n)
 BEGIN
 sum<-0
 while n>0 do
  sum<-sum+n%10
  n<-n/10
 return sum
 END
function cmmdc(a,b)
 BEGIN
 while b!=0 do
  rest<-a%b
  a<-b
  b<-rest
 return a
 END
